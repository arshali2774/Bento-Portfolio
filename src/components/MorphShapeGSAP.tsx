"use client";
import { gsap } from "gsap";
import { MorphSVGPlugin } from "gsap/MorphSVGPlugin";
import { useEffect, useRef, useState } from "react";

type MorphShapeGSAPProps = {
  shapes: string[];
};

const MorphShapeGSAP: React.FC<MorphShapeGSAPProps> = ({ shapes }) => {
  const svgRef = useRef<SVGSVGElement>(null);
  const [isClient, setIsClient] = useState(false);

  // Ensure we're on the client side to prevent hydration errors
  useEffect(() => {
    setIsClient(true);
  }, []);

  useEffect(() => {
    if (!isClient) return;

    gsap.registerPlugin(MorphSVGPlugin);
    if (!svgRef.current) return;

    const star10 = svgRef.current.querySelector("#star-10");
    // Initial scale animation (delay 2s)
    gsap.set(star10, { scale: 0, transformOrigin: "50% 50%", opacity: 0 });
    gsap.to(star10, {
      scale: 1,
      opacity: 1,
      duration: 0.8,
      delay: 2,
      ease: "back.out(1.7)",
      onComplete: () => {
        // Once scale up is complete, start rotation + morphing
        startMorphAnimation();
      },
    });

    function startMorphAnimation() {
      const tl = gsap.timeline({
        repeat: -1,
        defaults: { ease: "sine.in" },
      });

      // Continuous rotation tween (separate from timeline so we can speed it up/slow it down)
      const rotationTween = gsap.to(star10, {
        transformOrigin: "50% 50%",
        rotation: "+=360",
        duration: 4, // base rotation speed
        ease: "none",
        repeat: -1,
      });

      const morphDuration = 0.5;
      const holdDuration = 2;

      shapes.forEach((shapeId) => {
        const shapeEl = svgRef.current?.querySelector(
          shapeId
        ) as SVGPathElement | null;
        if (!shapeEl) return;

        // Accelerate rotation + morph
        tl.to(rotationTween, { timeScale: 3 });
        tl.to(star10, { morphSVG: shapeEl, duration: morphDuration });

        // Decelerate rotation + hold
        tl.to(rotationTween, { timeScale: 1 });
        tl.to(star10, { duration: holdDuration }, "-=1");
      });
    }
  }, [isClient, shapes]);

  // Don't render anything on server side
  if (!isClient) {
    return null;
  }

  return (
    <svg
      ref={svgRef}
      width="100%"
      height="100%"
      viewBox="-20 -20 100 100"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="z-10"
    >
      <path
        id="star-10"
        d="M57.1015 24.9819C60.9662 27.1166 60.9662 32.8834 57.1015 35.0181C54.502 36.4539 53.4648 39.7786 54.7576 42.5317C56.6794 46.6245 53.4249 51.29 49.0936 50.6511C46.1803 50.2213 43.4649 52.2761 42.957 55.2947C42.202 59.7825 36.9361 61.5646 33.7926 58.3961C31.6782 56.2649 28.3218 56.2649 26.2074 58.3961C23.0639 61.5646 17.798 59.7825 17.043 55.2947C16.5351 52.2761 13.8197 50.2213 10.9064 50.6511C6.57512 51.29 3.32058 46.6245 5.24245 42.5317C6.53516 39.7786 5.49797 36.4539 2.89848 35.0181C-0.966161 32.8834 -0.966161 27.1166 2.89848 24.9819C5.49797 23.5461 6.53516 20.2214 5.24245 17.4683C3.32058 13.3755 6.57512 8.70996 10.9064 9.3489C13.8197 9.77867 16.5351 7.72389 17.043 4.70526C17.798 0.217496 23.0639 -1.56457 26.2074 1.60391C28.3218 3.73514 31.6782 3.73514 33.7926 1.60391C36.9361 -1.56457 42.202 0.217498 42.957 4.70526C43.4649 7.72389 46.1803 9.77867 49.0936 9.3489C53.4249 8.70996 56.6794 13.3755 54.7576 17.4683C53.4648 20.2214 54.502 23.5461 57.1015 24.9819Z"
        fill="currentColor"
        strokeWidth={4}
        stroke="var(--background)"
      />
      <path
        id="star-9"
        d="M23.656 2.47475C27.2551 -0.824916 32.7449 -0.824917 36.344 2.47475C38.1745 4.15301 40.5833 5.03897 43.0531 4.94236C47.9091 4.75241 52.1146 8.31832 52.7727 13.1838C53.1074 15.6584 54.3891 17.9017 56.3425 19.432C60.1832 22.4406 61.1365 27.9039 58.5458 32.0585C57.2281 34.1716 56.7829 36.7226 57.306 39.1637C58.3343 43.9632 55.5894 48.7675 50.962 50.2673C48.6084 51.0301 46.6448 52.6952 45.4926 54.9049C43.2275 59.2495 38.0687 61.1469 33.5699 59.2901C31.2817 58.3457 28.7183 58.3457 26.4301 59.2901C21.9313 61.1469 16.7726 59.2495 14.5074 54.9049C13.3553 52.6952 11.3916 51.0301 9.038 50.2673C4.41061 48.7675 1.66569 43.9632 2.69403 39.1637C3.21706 36.7226 2.77193 34.1716 1.45423 32.0585C-1.13654 27.9039 -0.183231 22.4406 3.65746 19.432C5.61091 17.9017 6.89261 15.6584 7.22734 13.1838C7.88545 8.31832 12.0909 4.75241 16.9469 4.94236C19.4167 5.03897 21.8255 4.15301 23.656 2.47475Z"
        fill="currentColor"
        style={{ visibility: "hidden" }}
      />
      <path
        id="star-8"
        d="M25.1675 2.09799C27.782 -0.699329 32.218 -0.69933 34.8325 2.09799L37.4401 4.888C38.744 6.28318 40.5874 7.04671 42.4959 6.98221L46.3126 6.85323C50.1393 6.7239 53.2761 9.86069 53.1468 13.6874L53.0178 17.5041C52.9533 19.4126 53.7168 21.256 55.112 22.5599L57.902 25.1675C60.6993 27.782 60.6993 32.218 57.902 34.8325L55.112 37.4401C53.7168 38.744 52.9533 40.5874 53.0178 42.4959L53.1468 46.3126C53.2761 50.1393 50.1393 53.2761 46.3126 53.1468L42.4959 53.0178C40.5874 52.9533 38.744 53.7168 37.4401 55.112L34.8325 57.902C32.218 60.6993 27.782 60.6993 25.1675 57.902L22.5599 55.112C21.256 53.7168 19.4126 52.9533 17.5041 53.0178L13.6874 53.1468C9.86069 53.2761 6.7239 50.1393 6.85323 46.3126L6.98221 42.4959C7.04671 40.5874 6.28318 38.744 4.888 37.4401L2.09799 34.8325C-0.699329 32.218 -0.69933 27.782 2.09799 25.1675L4.888 22.5599C6.28318 21.256 7.04671 19.4126 6.98221 17.5041L6.85323 13.6874C6.7239 9.86069 9.86069 6.7239 13.6874 6.85323L17.5041 6.98221C19.4126 7.04671 21.256 6.28318 22.5599 4.888L25.1675 2.09799Z"
        fill="currentColor"
        style={{ visibility: "hidden" }}
      />
      <path
        id="star-5"
        d="M26.0293 2.45562C27.7464 -0.818545 32.2536 -0.818537 33.9707 2.45563L40.2739 14.4748C40.9245 15.7153 42.0735 16.5863 43.4053 16.8485L56.309 19.3891C59.8241 20.0811 61.2169 24.5536 58.763 27.2692L49.7549 37.238C48.8252 38.2669 48.3863 39.6763 48.5588 41.0788L50.2305 54.6681C50.6859 58.37 47.0395 61.1341 43.8058 59.5383L31.9353 53.6802C30.7102 53.0756 29.2898 53.0756 28.0647 53.6802L16.1942 59.5383C12.9605 61.1341 9.31413 58.37 9.76951 54.6681L11.4412 41.0788C11.6137 39.6763 11.1748 38.2669 10.2451 37.238L1.23704 27.2692C-1.21686 24.5536 0.175944 20.0811 3.69106 19.3891L16.5947 16.8485C17.9265 16.5863 19.0755 15.7153 19.7261 14.4748L26.0293 2.45562Z"
        fill="currentColor"
        style={{ visibility: "hidden" }}
      />
      <path
        id="star-4"
        d="M15 0C6.71573 0 0 6.71573 0 15C0 23.2844 6.71573 30 15 30C6.71573 30 0 36.7156 0 45C0 53.2844 6.71573 60 15 60C23.2844 60 30 53.2844 30 45C30 53.2844 36.7156 60 45 60C53.2844 60 60 53.2844 60 45C60 36.7156 53.2844 30 45 30C53.2844 30 60 23.2844 60 15C60 6.71573 53.2844 0 45 0C36.7156 0 30 6.71573 30 15C30 6.71573 23.2844 0 15 0Z"
        fill="currentColor"
        style={{ visibility: "hidden" }}
      />
      <path
        id="soft-star"
        d="M30 0C22.0384 0 15.5844 6.45407 15.5844 14.4156C15.5844 15.0611 15.0611 15.5844 14.4156 15.5844C6.45407 15.5844 0 22.0384 0 30C0 37.9616 6.45407 44.4157 14.4156 44.4157C15.0611 44.4157 15.5844 44.9389 15.5844 45.5843C15.5844 53.5459 22.0384 60 30 60C37.9616 60 44.4157 53.5459 44.4157 45.5843C44.4157 44.9389 44.9389 44.4157 45.5843 44.4157C53.5459 44.4157 60 37.9616 60 30C60 22.0384 53.5459 15.5844 45.5843 15.5844C44.9389 15.5844 44.4157 15.0611 44.4157 14.4156C44.4157 6.45407 37.9616 0 30 0Z"
        fill="currentColor"
        style={{ visibility: "hidden" }}
      />
      <path
        id="star-clove"
        d="M29.1994 0.711185C29.312 -0.237062 30.688 -0.237062 30.8006 0.711185L31.7445 8.66611C32.9633 18.9381 41.0619 27.0367 51.3338 28.2555L59.2887 29.1994C60.2371 29.312 60.2371 30.688 59.2887 30.8006L51.3338 31.7445C41.0619 32.9633 32.9633 41.0619 31.7445 51.3338L30.8006 59.2887C30.688 60.2371 29.312 60.2371 29.1994 59.2887L28.2555 51.3338C27.0367 41.0619 18.9381 32.9633 8.66611 31.7445L0.711185 30.8006C-0.237062 30.688 -0.237062 29.312 0.711185 29.1994L8.66611 28.2555C18.9381 27.0367 27.0367 18.9381 28.2555 8.66611L29.1994 0.711185Z"
        fill="currentColor"
        style={{ visibility: "hidden" }}
      />
      <path
        id="pentagon"
        d="M23.5897 2.14985C27.4121 -0.716616 32.5879 -0.716615 36.4103 2.14985L55.5037 16.4684C59.3261 19.3349 60.9255 24.4158 59.4655 29.0538L52.1724 52.2218C50.7124 56.8598 46.5251 60 41.8004 60H18.1996C13.4749 60 9.28757 56.8598 7.82756 52.2218L0.534513 29.0538C-0.925496 24.4158 0.673931 19.3349 4.49628 16.4684L23.5897 2.14985Z"
        fill="currentColor"
        style={{ visibility: "hidden" }}
      />
    </svg>
  );
};

export default MorphShapeGSAP;
